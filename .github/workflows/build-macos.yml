name: Build macOS .app

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Cache Python dependencies to speed up installation
      - name: Cache Python Packages
        uses: actions/cache@v4  # Updated to v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install Dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install --upgrade --no-cache-dir -r requirements.txt

      # Step 5: Install py2app
      - name: Install py2app
        run: pip install py2app

      # Step 6: Debug: List installed packages
      - name: List installed packages
        run: pip freeze

      # Step 7: Debug: Verify Python environment
      - name: Verify Python environment
        run: |
          python --version
          which python
          ls -la

      # Step 8: Build the .app file using py2app
      - name: Build the .app file
        run: |
          mkdir -p dist  # Ensure dist directory exists
          python setup.py py2app || echo "Build failed. Check dependencies or setup.py."
          ls -al dist  # Verify the dist directory contents

      # Step 9: Fallback to pyinstaller if py2app fails
      - name: Install pyinstaller (Fallback)
        if: failure()
        run: pip install pyinstaller

      - name: Build with pyinstaller (Fallback)
        if: failure()
        run: pyinstaller --onefile --windowed app.py

      # Step 10: Ensure the .app exists and zip it
      - name: Zip the .app file
        run: |
          cd dist
          if [ -d "app.app" ]; then
            echo "Packaging .app file..."
            zip -r app-macos.zip app.app
          else
            echo "Error: app.app not found!"
            exit 1
          fi

      # Step 11: Upload the ZIP to GitHub Artifacts
      - name: Upload the ZIP to GitHub Artifacts
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: app-macos.zip
          path: dist/app-macos.zip
