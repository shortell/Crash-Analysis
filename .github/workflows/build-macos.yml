name: Build macOS Binary

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Cache Python dependencies to speed up installation
      - name: Cache Python Packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install Dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install --no-cache-dir -r requirements.txt

      # Step 5: Install PyInstaller
      - name: Install PyInstaller
        run: pip install pyinstaller

      # Step 6: Build the macOS Binary with PyInstaller
      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile \
          --add-data "templates:templates" \
          --add-data "static:static" \
          --add-data "borough_assets:borough_assets" \
          --add-data "data:data" \
          --hidden-import=pipeline_v3 \
          app.py

          ls -al dist  # Check the dist directory contents

      # Step 7: Ensure the Binary Exists and Zip It
      - name: Zip the Binary
        run: |
          cd dist
          if [ -f "app" ]; then
            echo "Packaging the binary..."
            zip -r app-macos.zip app
          else
            echo "Error: Binary not found!"
            exit 1
          fi

      # Step 8: Upload the ZIP to GitHub Artifacts
      - name: Upload the ZIP to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-macos.zip
          path: dist/app-macos.zip
